{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","className","map","tab","type","id","onClick","title","find","content","App","useState","selectedTab","setSelectedTab","selection","ReactDOM","render","document","getElementById"],"mappings":"qLAmDeA,EAjCe,SAAC,GAA4C,IAAD,EAAzCC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cACpD,OACE,qCACE,sBACEC,UAAU,mBADZ,UAIIH,EAAKI,KAAI,SAAAC,GAAG,OACV,mCACE,wBACEC,KAAK,SAELH,UACEF,IAAkBI,EAAIE,GAAK,oBAAsB,YAEnDC,QAAS,kBAAMN,EAAcG,IAN/B,SAQGA,EAAII,OANAJ,EAAIE,SAWjB,qBAAKJ,UAAU,iBAIjB,wCACGH,EAAKU,MAAK,SAAAL,GAAG,OAAIA,EAAIE,KAAON,YAD/B,aACG,EAA4CU,cCxC/CX,G,MAAc,CAClB,CAAEO,GAAI,QAASE,MAAO,QAASE,QAAS,eACxC,CAAEJ,GAAI,QAASE,MAAO,QAASE,QAAS,eACxC,CAAEJ,GAAI,QAASE,MAAO,QAASE,QAAS,iBA2B3BC,EAxBO,WACpB,MAAsCC,mBAASb,EAAK,IAApD,mBAAOc,EAAP,KAAoBC,EAApB,KAIA,OACE,sBAAKZ,UAAU,MAAf,UACE,qDAEGW,EAAYL,SAGf,8BACE,cAAC,EAAD,CACET,KAAMA,EACNC,cAAea,EAAYP,GAC3BL,cAbU,SAACc,GAAD,OAAoBD,EAAeC,YCXvDC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.d3269f18.chunk.js","sourcesContent":["/* eslint-disable react/self-closing-comp */\nimport React from 'react';\nimport './Tabs.scss';\n\ninterface Tab {\n  id: string,\n  title: string,\n  content: string,\n}\n\ntype Selection = (params: Tab) => void;\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: Selection,\n};\n\nconst Tabs: React.FC<Props> = ({ tabs, selectedTabId, onTabSelected }) => {\n  return (\n    <>\n      <div\n        className=\"ButtonsContainer\"\n      >\n        {\n          tabs.map(tab => (\n            <>\n              <button\n                type=\"button\"\n                key={tab.id}\n                className={\n                  selectedTabId === tab.id ? 'TabButton Clicked' : 'TabButton'\n                }\n                onClick={() => onTabSelected(tab)}\n              >\n                {tab.title}\n              </button>\n            </>\n          ))\n        }\n        <div className=\"FreeSpace\">\n        </div>\n      </div>\n\n      <div>\n        {tabs.find(tab => tab.id === selectedTabId)?.content}\n      </div>\n    </>\n  );\n};\n\nexport default Tabs;\n","import React, { useState } from 'react';\nimport Tabs from './components/Tabs/Tabs';\n\nimport './App.scss';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  const selectTab = (selection: Tab) => setSelectedTab(selection);\n\n  return (\n    <div className=\"App\">\n      <h1>\n        Selected tab is&nbsp;\n        {selectedTab.title}\n      </h1>\n\n      <div>\n        <Tabs\n          tabs={tabs}\n          selectedTabId={selectedTab.id}\n          onTabSelected={selectTab}\n        />\n      </div>\n\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}